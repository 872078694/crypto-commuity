{"version":3,"sources":["firebase/firebase.ts","firebase/FirebaseFunction.ts","selector/HelloWorldSelector.tsx","components/HelloWorldExample.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebaseConfig","require","app","Firebase","initializeApp","analytics","auth","name","Functions","functions","helloWorld","firestore","httpsCallable","helloWorldSelector","selector","key","get","a","response","console","log","data","HelloWorld","roleResultLoadable","useRecoilValueLoadable","state","contents","App","Helmet","titleTemplate","defaultTitle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"krBAMMA,G,wBAAiBC,EAAQ,KAC3BC,EAAMC,IAASC,cAAcJ,GAEjCG,IAASE,YAEgBF,IAASE,UACdF,IAASG,KADtB,ICT0BC,EDWpBC,EAAYL,IAASM,UCPrBC,GDQYP,IAASQ,UAChBR,IAASQ,UAAUT,GCbJK,EAIU,aAHlCC,IAAYI,cAAcL,ICKtBM,EAAqBC,YAAS,CACzCC,IAAK,qBACLC,IAAI,WAAD,4BAAE,6BAAAC,EAAA,+DAASD,IAAT,SACoBN,IADpB,cACGQ,EADH,OAEHC,QAAQC,IAAI,WAAYF,GAFrB,kBAGIA,EAASG,MAHb,2CAAF,mDAAC,K,OCFC,SAASC,IACZ,IAAMC,EAAqBC,YAAuBX,GAClD,OAAQU,EAAmBE,OACzB,IAAK,WACH,OAAO,8BAAMF,EAAmBG,WAClC,IAAK,UACH,OAAO,6CACT,IAAK,WACH,OAAO,2CCMAC,MAhBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACC,cAACC,EAAA,EAAD,CAAQC,cAAc,uBAAuBC,aAAa,oBAC1D,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjC,cAAC,IAAD,CAAOU,KAAK,SAASC,UAAW,kBAAI,2BACpC,cAAC,IAAD,CAAOD,KAAK,YAAYC,UAAW,kBAAI,oCCAnCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04f5193b.chunk.js","sourcesContent":["import Firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/functions';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\n\nconst firebaseConfig = require('./firebaseConfig.json');\nlet app = Firebase.initializeApp(firebaseConfig);\n\nFirebase.analytics();\n\nexport const Analytics = Firebase.analytics;\nexport const Auth = Firebase.auth;\nexport const Functions = Firebase.functions;\nexport const FireStore = Firebase.firestore;\nexport const db = Firebase.firestore(app);\n","import { Functions } from './firebase';\r\n\r\nexport const FirebaseFunction = (name: string) => {\r\n  return Functions().httpsCallable(name);\r\n};\r\n\r\nexport const helloWorld = FirebaseFunction('helloWorld');\r\n","import { atom, selector } from \"recoil\";\r\nimport { helloWorld } from \"../firebase/FirebaseFunction\";\r\n\r\n// const helloWorldDefaultAtomState = atom({\r\n//   key: \"helloWorldDefaultAtomState\",\r\n//   default: \"Show All\",\r\n// });\r\n\r\nexport const helloWorldSelector = selector({\r\n  key: \"helloWorldSelector\",\r\n  get: async ({ get }) => {\r\n    const response = await helloWorld();\r\n    console.log(\"response\", response);\r\n    return response.data;\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useRecoilValueLoadable } from 'recoil';\r\nimport {\r\n    helloWorldSelector\r\n  } from '../selector/HelloWorldSelector';\r\n\r\n\r\n\r\nexport function HelloWorld() {\r\n    const roleResultLoadable = useRecoilValueLoadable(helloWorldSelector);\r\n    switch (roleResultLoadable.state) {\r\n      case 'hasValue':\r\n        return <div>{roleResultLoadable.contents}</div>;\r\n      case 'loading':\r\n        return <div>Loading...</div>;\r\n      case 'hasError':\r\n        return <div>damn...</div>;\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport { Helmet } from 'react-helmet';\r\nimport { HelloWorld } from './components/HelloWorldExample';\r\n\r\nfunction App() {\r\n  return (\r\n    <RecoilRoot>\r\n      <BrowserRouter>\r\n       <Helmet titleTemplate=\"%s | CryptoCommunity\" defaultTitle=\"CryptoCommunity\" />\r\n       <Switch>\r\n           <Route exact path=\"/\" component={HelloWorld} />\r\n           <Route path=\"/login\" component={()=><div/>} />\r\n           <Route path=\"/register\" component={()=><div/>} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </RecoilRoot>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}